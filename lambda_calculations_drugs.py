"""Старые вычисления коэффициентов lambda"""
import main_functions

sigma = 0.1181
row = 1.131
eta = 20.19
delta = 0.3743
alfa = 1.636
beta = 0.002
mu = 0.00311

b_list = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.35]

y_lists = [[267.7979614607897, 8.189706664487801, 447.134228980832, -1, 0],
           [267.83313853426284, 8.17000254110664, 447.0453175404535, -0.9265615097135083, 0],
           [267.8683644420103, 8.149974254489223, 446.9563499858526, -0.8527915762427085, 0],
           [267.90363930107105, 8.129611515662646, 446.8673261991779, -0.778679909802122, 0],
           [267.93896322891294, 8.108903518210582, 446.778246062152, -0.7042157031660565, 0],
           [267.97433634343236, 8.087838901712502, 446.6891094560706, -0.6293875951059533, 0],
           [268.00975876296565, 8.066405711805373, 446.59991626179476, -0.5541836304562935, 0],
           [268.0452306062786, 8.044591356494948, 446.51066635975656, -0.47859121642059677, 0],
           [268.0807519925827, 8.022382558256623, 446.42135962994826, -0.40259707467808425, 0],
           [268.11632304152596, 7.99976530144329, 446.33199595192707, -0.3261871887868608, 0],
           [268.15194387319826, 7.976724774408467, 446.2425752048109, -0.2493467463081913, 0],
           [268.1876146081403, 7.953245305688341, 446.1530972672721, -0.17206007499123643, 0],
           [268.2233353673337, 7.929310293489721, 446.0635620175425, -0.09431057225640416, 0],
           [268.25910627221316, 7.90490212759039, 445.9739693334054, -0.01608062709948399, 0],
           [268.277010567361, 7.892514811925054, 445.9291514151162, 0.023220311707234487, 0]]

x_lists = [[0.7597650701002963, 1.6092032797937954, 0.17297680277471758, None, 0.31552230830884315],
           [0.7592779927650146, 1.5983626292984847, 0.17304452929892933, 0.2773479435684018, 0.31552230830884315],
           [0.7587908531136986, 1.5874752992398589, 0.17311235077371842, 0.28017243096319466, 0.31552230830884315],
           [0.7583036509281841, 1.5765398053555366, 0.17318026744775922, 0.2830450495184571, 0.31552230830884315],
           [0.7578163859893596, 1.5655545886663, 0.17324827957070868, 0.285967358182741, 0.31552230830884315],
           [0.7573290580771695, 1.5545180101937939, 0.17331638739320704, 0.28894099590443023, 0.31552230830884315],
           [0.7568416669705799, 1.5434283451908897, 0.17338459116689978, 0.2919676873996312, 0.31552230830884315],
           [0.7563542124476141, 1.532283776828779, 0.17345289114442053, 0.2950492494667321, 0.31552230830884315],
           [0.7558666942853016, 1.521082389277027, 0.17352128757942112, 0.2981875979053111, 0.31552230830884315],
           [0.7553791122597098, 1.5098221601039303, 0.17358978072655593, 0.3013847551162756, 0.31552230830884315],
           [0.7548914661459292, 1.4985009519138746, 0.17365837084149396, 0.30464285846465233, 0.31552230830884315],
           [0.754403755718046, 1.4871165031261433, 0.17372705818093756, 0.3079641695002364, 0.31552230830884315],
           [0.7539159807491758, 1.4756664177852434, 0.17379584300260134, 0.31135108414779983, 0.31552230830884315],
           [0.7534281410114257, 1.4641481542755768, 0.1738647255652398, 0.3148061439920255, 0.31552230830884315],
           [0.7531841967827184, 1.4583626185687077, 0.17389920358057684, 0.31656006549197335, 0.31552230830884315]]

print(alfa-x_lists[0][-1])

fx_lists = []
fy_lists = []
gx_lists = []
gy_lists = []

for i in range(len(b_list)):
    fx_lists.append([])
    fy_lists.append([])
    gx_lists.append([])
    gy_lists.append([])
    for j in range(5):
        if x_lists[i][j] is None:
            fx_lists[i].append(None)
            fy_lists[i].append(None)
            gx_lists[i].append(None)
            gy_lists[i].append(None)
            continue

        fx_lists[i].append((row*y_lists[i][j])/(eta+y_lists[i][j]) - mu*y_lists[i][j] - delta)
        fy_lists[i].append((row*eta*x_lists[i][j])/((eta+y_lists[i][j])**2) - mu*x_lists[i][j])
        gx_lists[i].append(-1*y_lists[i][j])
        gy_lists[i].append(alfa - 2*alfa*beta*y_lists[i][j] - x_lists[i][j] - (b_list[i]/((1+y_lists[i][j])**2)))


p_lists = []
q_lists = []

for i in range(len(b_list)):
    p_lists.append([])
    q_lists.append([])
    for j in range(5):
        if fx_lists[i][j] is None:
            p_lists[i].append(None)
            q_lists[i].append(None)
            continue
        p_lists[i].append((-1)*fx_lists[i][j] + gy_lists[i][j]*(-1))
        q_lists[i].append(fx_lists[i][j]*gy_lists[i][j] - gx_lists[i][j]*fy_lists[i][j])

lambdas = []
for i in range(len(b_list)):
    lambdas.append([])
    for j in range(5):
        if p_lists[i][j] is None:
            lambdas[i].append((None, None))
            continue
        lambdas[i].append(main_functions.roots_of_quadratic_equation(1, p_lists[i][j], q_lists[i][j]))

print()

for i in range(len(b_list)):
    print(f'b = {b_list[i]}')
    for j in range(5):
        print(f'{x_lists[i][j]}, {y_lists[i][j]}: {lambdas[i][j]}')
    print()

'''
b = 0.0
0.7597650701002963, 267.7979614607897: (0.3247786142637614, -1.3564563312139528)
1.6092032797937954, 8.189706664487801: ((-0.0500935376120386+0.5762973396694753j), (-0.05009353761203867-0.5762973396694753j))
0.17297680277471758, 447.134228980832: (-0.4526782375355489, -1.6930954678825032)
None, -1: (None, None)
0.31552230830884315, 0: (1.3204776916911567, -0.3743000000000001)

b = 0.1
0.7592779927650146, 267.83313853426284: (0.32461358275137076, -1.356135521461903)
1.5983626292984847, 8.17000254110664: ((-0.04545222838289811+0.5738740383838633j), (-0.04545222838289818-0.5738740383838633j))
0.17304452929892933, 447.0453175404535: (-0.4523316962979427, -1.692661181024054)
0.2773479435684018, -0.9265615097135083: (-0.4249226495279004, -17.178007566525203)
0.31552230830884315, 0: (1.2204776916911566, -0.37429999999999997)

b = 0.2
0.7587908531136986, 267.8683644420103: (0.32444832122195655, -1.3558148790241158)
1.5874752992398589, 8.149974254489223: ((-0.04079622331957022+0.5713824828350619j), (-0.040796223319570286-0.5713824828350619j))
0.17311235077371842, 446.9563499858526: (-0.45198490259330537, -1.6922267096634815)
0.28017243096319466, -0.8527915762427085: (-0.41966690482296354, -7.869664018848504)
0.31552230830884315, 0: (1.1204776916911567, -0.3743000000000001)

b = 0.3
0.7583036509281841, 267.90363930107105: (0.32428282913326434, -1.3554944042457762)
1.5765398053555366, 8.129611515662646: ((-0.03612508082766869+0.5688207480913515j), (-0.03612508082766876-0.5688207480913515j))
0.17318026744775922, 446.8673261991779: (-0.45163785588443095, -1.6917920534707276)
0.2830450495184571, -0.778679909802122: (-0.41433660556253926, -4.769486886403336)
0.31552230830884315, 0: (1.0204776916911564, -0.37429999999999997)

b = 0.4
0.7578163859893596, 267.93896322891294: (0.32411710594108323, -1.355174097473222)
1.5655545886663, 8.108903518210582: ((-0.031438337962536075+0.5661867986848059j), (-0.031438337962536145-0.5661867986848059j))
0.17324827957070868, 446.778246062152: (-0.45129055563218423, -1.69135721211461)
0.285967358182741, -0.7042157031660565: (-0.4088948824036802, -3.221485578249295)
0.31552230830884315, 0: (0.9204776916911567, -0.37429999999999997)

b = 0.5
0.7573290580771695, 267.97433634343236: (0.32395115109924155, -1.3548539590539432)
1.5545180101937939, 8.087838901712502: ((-0.02673550896235348+0.5634784800509242j), (-0.02673550896235355-0.5634784800509242j))
0.17331638739320704, 446.6891094560706: (-0.45094300129549825, -1.6909221852628253)
0.28894099590443023, -0.6293875951059533: (-0.40327856399299566, -2.2945183885051)
0.31552230830884315, 0: (0.8204776916911567, -0.3743000000000001)

b = 0.6
0.7568416669705799, 268.00975876296565: (0.3237849640595717, -1.3545339893366153)
1.5434283451908897, 8.066405711805373: ((-0.022016083648769065+0.5606935091044017j), (-0.022016083648769134-0.5606935091044017j))
0.17338459116689978, 446.59991626179476: (-0.45059519233133094, -1.6904869725819298)
0.2919676873996312, -0.5541836304562935: (-0.39736894544746304, -1.6783029520429613)
0.31552230830884315, 0: (0.7204776916911568, -0.3743000000000001)

b = 0.7
0.7563542124476141, 268.0452306062786: (0.3236185442719358, -1.354214188671068)
1.532283776828779, 8.044591356494948: ((-0.017279525679937787+0.557829463843667j), (-0.017279525679937856-0.557829463843667j))
0.17345289114442053, 446.51066635975656: (-0.45024712819470103, -1.690051573737347)
0.2950492494667321, -0.47859121642059677: (-0.39091294806811366, -1.2400638340782024)
0.31552230830884315, 0: (0.6204776916911567, -0.37429999999999997)

b = 0.8
0.7558666942853016, 268.0807519925827: (0.3234518911841756, -1.3538945574083305)
1.521082389277027, 8.022382558256623: ((-0.012525270639109791+0.5548837718602643j), (-0.01252527063910986-0.5548837718602643j))
0.17352128757942112, 446.42135962994826: (-0.44989880833862905, -1.6896159883933555)
0.2981875979053111, -0.40259707467808425: (-0.38326101670093726, -0.9139368230628283)
0.31552230830884315, 0: (0.5204776916911567, -0.3743000000000001)

b = 0.9
0.7553791122597098, 268.11632304152596: (0.323285004242136, -1.353575095900605)
1.5098221601039303, 7.99976530144329: ((-0.007752723939185386+0.5518536976108618j), (-0.007752723939185454-0.5518536976108618j))
0.17358978072655593, 446.33199595192707: (-0.44955023221416657, -1.689180216213082)
0.3013847551162756, -0.3261871887868608: (-0.37216384616174425, -0.6652196039002958)
0.31552230830884315, 0: (0.4204776916911567, -0.3743000000000001)

b = 1.0
0.7548914661459292, 268.15194387319826: (0.3231178828896444, -1.3532558045012808)
1.4985009519138746, 7.976724774408467: ((-0.002961258521187665+0.548736328286854j), (-0.002961258521187732-0.548736328286854j))
0.17365837084149396, 446.2425752048109: (-0.4492013992703767, -1.6887442568584992)
0.30464285846465233, -0.2493467463081913: (-0.34499772641900844, -0.4843653755243617)
0.31552230830884315, 0: (0.3204776916911567, -0.37429999999999997)

b = 1.1
0.754403755718046, 268.1876146081403: (0.3229505265684822, -1.3529366835649614)
1.4871165031261433, 7.953245305688341: ((0.001849787678813586+0.5455285580904714j), (0.0018497876788135192-0.5455285580904714j))
0.17372705818093756, 446.1530972672721: (-0.4488523089542956, -1.688308109990421)
0.3079641695002364, -0.17206007499123643: (-0.2535690026313526, -0.4054597405270197)
0.31552230830884315, 0: (0.22047769169115664, -0.3743000000000001)

b = 1.2
0.7539159807491758, 268.2233353673337: (0.322782934718409, -1.3526177334474319)
1.4756664177852434, 7.929310293489721: ((0.006681114523597388+0.5422270706950757j), (0.006681114523597322-0.5422270706950757j))
0.17379584300260134, 446.0635620175425: (-0.44850296071097273, -1.687871775268489)
0.31135108414779983, -0.09431057225640416: (-0.13133361593254433, -0.38564184224192577)
0.31552230830884315, 0: (0.12047769169115674, -0.3743)

b = 1.3
0.7534281410114257, 268.25910627221316: (0.32261510677712435, -1.3522989545056945)
1.4641481542755768, 7.90490212759039: ((0.011533462763105398+0.5388283196295992j), (0.011533462763105332-0.5388283196295992j))
0.1738647255652398, 445.9739693334054: (-0.44815335398342004, -1.6874352523511762)
0.3148061439920255, -0.01608062709948399: (-0.020784010859780072, -0.3759085947062891)
0.31552230830884315, 0: (0.020477691691156652, -0.3743)

b = 1.35
0.7531841967827184, 268.277010567361: (0.32253110409598407, -1.3521396293376564)
1.4583626185687077, 7.892514811925054: ((0.013967763404850403+0.5370912936596204j), (0.013967763404850337-0.5370912936596204j))
0.17389920358057684, 445.9291514151162: (-0.44797845351342847, -1.6872169202122018)
0.31656006549197335, 0.023220311707234487: (0.028899690232687236, -0.3721078175668215)
0.31552230830884315, 0: (-0.029522308308843392, -0.3743)

1.3204776916911567 - значение b, при котором lambda = 0 для точки A(sigma/delta, 0)
'''

'''
p_list = []
q_list = []

for i in range(5):
    x = x_lists[-1][i]
    y = y_lists[-1][i]
    b = 1.35
    p_list.append((row*y*-1)/(eta+y) + mu*y + delta - alfa + 2*alfa*beta*y + x + (b/((1+y)**2)))
    q_list.append(((alfa*row*y)/(eta + y)) -
                  ((2*alfa*beta*row*y**2)/(eta + y)) -
                  ((row * y * x)/(eta + y)) -
                  ((b*row*y)/((eta+y)*((1+y)**2))) -
                  (alfa*mu*y) +
                  (2*alfa*beta*mu*(y**2)) +
                  (mu*x*y) +
                  ((b*mu*y)/((1+y)**2)) -
                  (alfa*delta) +
                  (2*alfa*beta*delta*y) +
                  (delta*x) +
                  ((b*delta)/((1+y)**2)) +
                  ((row*eta*x*y)/((eta + y)**2)) -
                  (y * mu * x))

print(p_list)
print(q_list)
print()
'''

