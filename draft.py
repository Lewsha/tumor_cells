"""Черновик под разные вычисления"""
import pylab
import matplotlib
from main_functions import *
import resting_points_calculation


def separatrix(mu=0.00311):

    '''grid = {0.00311: ((-2.0002549, 0.00001), (0.7597650701002939, 267.79796146079036), (1.7941933540635, 1000)),
            0.004: ((-1.3244536, 0.00001), (1.0095914973051685, 191.4451414104008), (2.967239395, 1000)),
            0.005: ((-0.147, 0.00000001), (1.1656679694642182, 143.74450810995776), (4.17080768589, 1000)),
            0.006: ((0.49263183311, 5.0), (1.2658832307141081, 113.11637203114053), (5.33028731119, 1000)),
            0.007: ((0.621488123866, 5.0), (1.3365400697003076, 91.5219835879255), (6.46661098292, 1000)),
            0.008: ((0.74924910716, 7.0), (1.389523555054411, 75.32898684156143), (7.58857936527, 1000)),
            0.009: ((0.8762630473, 9.0), (1.431171171128489, 62.60049782136646), (8.7009422083, 1000)),
            0.01: ((1.00205144441, 10.0), (1.4652850996524778, 52.174480546308736), (9.80674350669, 1000))}'''

    grid = {0.0027: ((0.00001, 12.824671011), (0.5208856335983751, 340.8051242058756), (1.0867901996776, 1000)),
            0.00311: ((-2.0002549, 0.00001), (0.7597650701002939, 267.79796146079036), (1.7941933540635, 1000)),
            0.004: ((-1.3244536, 0.00001), (1.0095914973051685, 191.4451414104008), (2.967239395, 1000)),
            0.005: ((-0.147, 0.00000001), (1.1656679694642182, 143.74450810995776), (4.17080768589, 1000)),
            0.006: ((0.7696276521, 0.08), (1.2658832307141081, 113.11637203114053), (5.33028731119, 1000)),
            0.007: ((1.333637904, 0.17), (1.3365400697003076, 91.5219835879255), (6.46661098292, 1000)),
            0.008: ((3.2, 2.676197568736), (1.389523555054411, 75.32898684156143), (7.58857936527, 1000)),
            0.009: ((2.03579873, 1.25), (1.431171171128489, 62.60049782136646), (8.7009422083, 1000)),
            0.01: ((1.5545562, 2.0), (1.4652850996524778, 52.174480546308736), (9.80674350669, 1000)),
            0.013: ((2.0, 50.7090654), (1.5502109282783596, 26.219153949156567), (2.0, 58.50910367))}
    # ()
    # ()
    # ()
    # ()
    # ()

    if mu not in grid.keys():
        mu = 0.00311

    x_list = []
    y_list = []

    result = runge_cutt(grid[mu][0], mu=mu, points_count=2000)
    x_list.extend(result[0])
    y_list.extend(result[1])

    x_list.append(grid[mu][1][0])
    y_list.append(grid[mu][1][1])

    result = runge_cutt(grid[mu][2], mu=mu, points_count=2000)
    result = list(result)
    result[0].reverse()
    result[1].reverse()
    x_list.extend(result[0])
    y_list.extend(result[1])

    return x_list, y_list


def exsp():

    new_x = 3.2
    new_y = 2.676197568736
    grid = [(new_x, new_y)]

    for i in range(10):
        # new_x += 0.1
        new_y += 0.000000000001
        grid.append([new_x, new_y])

    x_lists = []
    y_lists = []

    for point_number in range(len(grid)):
        print(point_number)
        result = runge_cutt(grid[point_number], mu=0.008, points_count=2000)
        x_lists.append(result[0])
        y_lists.append(result[1])

    result = []
    for x, y in zip(x_lists, y_lists):
        result.append(x)
        result.append(y)

    # ((1.0095914973051685+0j), (191.4451414104008-0j)) для 0.004 (2.967239395, 1000) (-1.3244536, 0.00001)
    # ((1.1656679694642182+0j), (143.74450810995776-0j)) для 0.005 (4.17080768589, 1000) (-0.147, 0.00000001)
    # ((1.2658832307141081+0j), (113.11637203114053-0j)) для 0.006 (5.33028731119, 1000) (0.7696276521, 0.08)
    # ((1.3365400697003076+0j), (91.5219835879255-0j)) для 0.007 (6.46661098292, 1000) (1.333637904, 0.17)
    # ((1.389523555054411+0j), (75.32898684156143-0j)) для 0.008 (7.58857936527, 1000) (3.2, 2.676197568736)
    # ((1.431171171128489+0j), (62.60049782136646-0j)) для 0.009 (8.7009422083, 1000) (2.03579873, 1.25)
    # ((1.4652850996524778+0j), (52.174480546308736-0j)) для 0.01 (9.80674350669, 1000) (1.5545562, 2.0)
    # (0.5208856335983751 + 0j), (340.8051242058756 - 0j) для 0.0027 (1.0867901996776, 1000) (0.00001, 12.824671011)
    # (1.5502109282783596, 26.219153949156567) для 0.013 (2.0, 58.50910367) (2.0, 50.7090654)
    pylab.scatter(1.389523555054411, 75.32898684156143, s=3, zorder=2)
    pylab.plot(*result, zorder=1)
    pylab.yscale('log')
    pylab.show()

if __name__ == "__main__":
    # Нарисуем двумерный график

    '''res = separatrix(mu=0.00311)
    pylab.plot(res[0], res[1])
    pylab.tick_params(axis='both', which='major', labelsize=20)
    # Покажем окно с нарисованным графиком
    pylab.show()'''
    # print(resting_points_calculation.resting_points_calc(mu=0.013))

    exsp()
